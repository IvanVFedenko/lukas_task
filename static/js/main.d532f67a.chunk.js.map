{"version":3,"sources":["store/reducers.js","store/store.js","constants/action_types.js","components/Code.js","components/Phone.js","components/Get_error.js","api/get_countries.js","constants/api_constants.js","containers/Countries.js","store/actions.js","App.js","index.js"],"names":["initial_state","countries","rootReducer","combineReducers","countries_list","state","action","actions","value","type","store","createStore","composeWithDevTools","applyMiddleware","thunk","Code","props","country","callingCode","Phone","phone","handle_input","get_error","no_error","code","className","placeholder","length","onChange","onBlur","GetError","get_from_server","a","async","axios","get","responce","data","Countries","error","event","output","target","replace","match","g1","g2","g3","setState","get_code","this","set_countries_thunk","align","map","key","id","React","Component","getDispatchFromProps","dispatch","connect","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d532f67a.chunk.js","sourcesContent":["import { SET_COUNTRIES } from '../constants/action_types';\r\n\r\nconst initial_state = {\r\n  countries: []\r\n};\r\n\r\nexport const countries_reducer = (state = initial_state, action) => {\r\n  const actions = {\r\n    [SET_COUNTRIES]: () => ({\r\n      ...state,\r\n      countries: action.value\r\n    })\r\n  };\r\n  if (action.type in actions) {\r\n    return actions[action.type](action);\r\n  }\r\n  return state;\r\n};\r\n","import thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\n\r\nimport { countries_reducer } from './reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  countries_list: countries_reducer\r\n});\r\n\r\nexport const countries = ({ countries_list }) => countries_list.countries;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","export const SET_COUNTRIES = 'SET_COUNTRIES';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Code = (props) => {\r\n  const { country } = props;\r\n  return <option value={country.callingCode}>{country.callingCode}</option>;\r\n};\r\n\r\nCode.propTypes = {\r\n  country: PropTypes.object.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Phone = (props) => {\r\n  const { phone, handle_input, get_error, no_error, code } = props;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"select_input\"\r\n        placeholder={\r\n          code.length === 2\r\n            ? '(xxxx) xxx-xxxx'\r\n            : code.length === 3\r\n            ? '(xxx) xxx-xxxx'\r\n            : '(xx) xxx-xxxx'\r\n        }\r\n        type=\"text\"\r\n        value={phone}\r\n        onChange={handle_input}\r\n        onBlur={\r\n          phone.length === 13 || phone.length === 14 || phone.length === 15\r\n            ? no_error\r\n            : get_error\r\n        }\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nPhone.propTypes = {\r\n  phone: PropTypes.string.isRequired,\r\n  handle_input: PropTypes.func.isRequired,\r\n  get_error: PropTypes.func.isRequired,\r\n  no_error: PropTypes.func.isRequired,\r\n  code: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GetError = (props) => {\r\n  const { code } = props;\r\n  return (\r\n    <>\r\n      {code.length === 4 ? (\r\n        <p className=\"error\">number must contain 9 digits</p>\r\n      ) : (\r\n        ' '\r\n      )}\r\n\r\n      {code.length === 3 ? (\r\n        <p className=\"error\">number must contain 10 digits</p>\r\n      ) : (\r\n        ' '\r\n      )}\r\n      {code.length === 2 ? (\r\n        <p className=\"error\">number must contain 11 digits</p>\r\n      ) : (\r\n        ' '\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nGetError.propTypes = {\r\n  code: PropTypes.string.isRequired\r\n};\r\n","import axios from 'axios';\r\nimport { BASE_URL } from '../constants/api_constants';\r\n\r\nexport const get_from_server = async () => {\r\n  const responce = await axios.get(BASE_URL);\r\n  const countries = responce.data;\r\n  return countries;\r\n};\r\n","export const BASE_URL = 'https://api.train-time.com/countries/all';\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { countries } from '../store/store';\r\nimport { Code } from '../components/Code';\r\nimport { Phone } from '../components/Phone';\r\nimport { GetError } from '../components/Get_error';\r\nimport { set_countries_thunk } from '../store/actions';\r\n\r\nclass Countries extends React.Component {\r\n  state = {\r\n    code: '+44',\r\n    phone: '',\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.set_countries_thunk();\r\n  }\r\n\r\n  handle_input = (event) => {\r\n    const { code } = this.state;\r\n    let output = '';\r\n    event.target.value.replace(\r\n      /^\\D*(\\d{0,4})\\D*(\\d{0,3})\\D*(\\d{0,4})/,\r\n      (match, g1, g2, g3) => {\r\n        if (g1.length) {\r\n          output += `(${g1}`;\r\n        }\r\n\r\n        if (code.length === 4 && g1.length === 2) {\r\n          output += ')';\r\n        } else if (code.length === 3 && g1.length === 3) {\r\n          output += ')';\r\n        } else if (code.length === 2 && g1.length === 4) {\r\n          output += ')';\r\n        }\r\n\r\n        if (g2.length) {\r\n          output += ' ' + g2;\r\n        }\r\n\r\n        if (g2.length === 3) {\r\n          output += '-';\r\n        }\r\n\r\n        if (g3.length) {\r\n          output += g3;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      phone: output,\r\n      error: false\r\n    });\r\n  };\r\n\r\n  get_error = () => {\r\n    this.setState({\r\n      error: true\r\n    });\r\n  };\r\n  no_error = () => {\r\n    this.setState({\r\n      error: false\r\n    });\r\n  };\r\n\r\n  get_code = (event) => {\r\n    this.setState({\r\n      error: false,\r\n      code: event.target.value,\r\n      phone: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { countries } = this.props;\r\n    const { phone, code } = this.state;\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <form>\r\n          <div className=\"form\">\r\n            <div>\r\n              <fieldset className=\"select\">\r\n                <legend align=\"left\">calling code</legend>\r\n                <select className=\"select_code\" onChange={this.get_code}>\r\n                  {countries.map((country) => (\r\n                    <Code key={country.id} country={country} />\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div>\r\n              <Phone\r\n                phone={phone}\r\n                handle_input={this.handle_input}\r\n                get_error={this.get_error}\r\n                no_error={this.no_error}\r\n                code={code}\r\n              />\r\n              {this.state.error ? <GetError code={this.state.code} /> : ''}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getStateFromProps = (state) => ({\r\n  countries: countries(state)\r\n});\r\n\r\nconst getDispatchFromProps = {\r\n  set_countries_thunk\r\n};\r\n\r\nCountries.propTypes = {\r\n  set_countries_thunk: PropTypes.func.isRequired,\r\n  countries: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\nexport default connect(getStateFromProps, getDispatchFromProps)(Countries);\r\n","import * as a_t from '../constants/action_types';\r\nimport * as get from '../api/get_countries';\r\n\r\nexport const set_countries = (value) => ({ type: a_t.SET_COUNTRIES, value });\r\n\r\nexport const set_countries_thunk = () => async (dispatch) => {\r\n  const countries = await get.get_from_server();\r\n  dispatch(set_countries(countries));\r\n};\r\n","import React from 'react';\nimport Countries from './containers/Countries';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Countries />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}